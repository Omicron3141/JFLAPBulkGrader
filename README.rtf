{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl300\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In this folder there are two python scripts:\cb1 \
\
\cb3 \'a0\'a0\'a0 grader.py\cb1 \
\cb3 \'a0\'a0\'a0 jflapgrader_py2.py\cb1 \
\
\cb3 You can run these straight from the command line. grader takes in 3 user inputs, jflapgrader_py2 only takes 2. Example run lines:\cb1 \
\
\cb3 \'a0\'a0\'a0 python grader.py tm1.jff tm1.sols 15\cb1 \
\cb3 \'a0\'a0\'a0 python jflapgrader_py2.py tm1.jff tm1.sols\
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \cb3 grader is a wrapper script for jflapgrader_py2 that was used to produce a results.json file for a given machine being tested. The wrapper script takes in a .jff student file, a solutions .sols file and a max score. The .sols solution file is just a text file with a different extension, so a text file should work. jflapgrader_py2 only takes in the student .jff file and the .sols solution file. It does not include the max score since it does not calculate the score the student received, grader does this.\'a0\cb1 \
\
\cb3 The grader script does not divide points equally among tests. This is to avoid rewarding a machine that only ever returns True, or False, half the possible points (given a test file with a 50/50 ratio for True/False tests cases). Instead the grader script counts the number of tests the file fails and if it is greater than a certain amount, it just grades the file as a 0. If it passes a majority of the tests, then it awards most of the points and splits the remaining points evenly among the rest of the tests.\'a0\cb1 \
\
\cb3 When the jflapgrader_py2 script is run (or called within grader.py when that script is run), in the terminal that it is run in it will show a summary of the tests that it ran. This might be the most useful thing for you since it tells you number of failed tests, totalTests, and also which tests it failed.\cb1 \
\
\cb3 I've also included a TM and the solutions to go along with it so you could try running the scripts. There is also a solutions file that doesn't correspond to the TM so that you could see what it returns when it fails some tests.\cb1 \
\
\cb3 \'a0\'a0\'a0 python jflapgrader_py2.py tm1.jff tm0.sols\cb1 \
\
\cb3 Lastly, since this is in python2, it will complain if the working version is not 2.\'a0\cb1 \
}